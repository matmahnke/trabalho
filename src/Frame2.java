/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Matheus
 */
public class Frame2 extends javax.swing.JFrame {

    Computador comp;

    /**
     * Creates new form Frame2
     */
    public Frame2() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CBDispositivos = new javax.swing.JComboBox<>();
        BTConectar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        RBUSB = new javax.swing.JRadioButton();
        RBParalela = new javax.swing.JRadioButton();
        BtCriar = new javax.swing.JButton();
        RBUSB1 = new javax.swing.JRadioButton();
        RBParalela1 = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CBDispositivos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        BTConectar.setText("Conectar");
        BTConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTConectarActionPerformed(evt);
            }
        });

        jLabel1.setText("Criar Dispositivo:");

        jLabel2.setText("Conectar Dispositivo:");

        RBUSB.setText("Pendrive");

        RBParalela.setText("CD");

        BtCriar.setText("Criar");
        BtCriar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtCriarActionPerformed(evt);
            }
        });

        RBUSB1.setText("HD Externo");

        RBParalela1.setText("DVD");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(BtCriar)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(RBUSB1)
                                    .addComponent(RBUSB))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(RBParalela)
                                    .addComponent(RBParalela1))
                                .addGap(118, 118, 118))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(101, 101, 101)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CBDispositivos, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(BTConectar))))
                        .addContainerGap(179, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(RBUSB)
                    .addComponent(RBParalela))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RBUSB1)
                    .addComponent(RBParalela1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(BtCriar)
                .addGap(46, 46, 46)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CBDispositivos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                .addComponent(BTConectar)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BTConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTConectarActionPerformed
        boolean isUSB = false;
        int nulo = 0;
        if (CBDispositivos.getSelectedItem() == "CD") {
            isUSB = false;
            CD cd = new CD();
            Paralela[] par = comp.getPAR();
            for (int i = 0; i < par.length; i++) {
                if (par[i] == null) {
                    nulo = i;
                    break;
                }
            }
            cd.setMidiaCD(true);
            cd.setUnidade((char) (comp.getUS().length + nulo));
            cd.setTamanho(24);
            cd.setConectado(true);
        } else if (CBDispositivos.getSelectedItem() == "DVD") {
            isUSB = false;

            DVD dvd = new DVD();
            Paralela[] par = comp.getPAR();
            for (int i = 0; i < par.length; i++) {
                if (par[i] == null) {
                    nulo = i;
                    break;
                }
            }
            dvd.setMidiaCD(true);
            dvd.setUnidade((char) (comp.getUS().length + nulo));
            dvd.setTamanho(24);
            dvd.setConectado(true);
        } else if (CBDispositivos.getSelectedItem() == "Pendrive") {
            isUSB = true;

            Pendrive pendrive = new Pendrive();
            USB[] us = comp.getUS();
            for (int i = 0; i < us.length; i++) {
                if (us[i] == null) {
                    nulo = i;
                    break;
                }
            }
            pendrive.setConectado(true);
            pendrive.setTamanho(24);
            pendrive.setUnidade((char) (comp.getPAR().length + nulo));
        } else if (CBDispositivos.getSelectedItem() == "HD Externo") {
            isUSB = true;

            HDExterno hde = new HDExterno();
            USB[] us = comp.getUS();
            for (int i = 0; i < us.length; i++) {
                if (us[i] == null) {
                    nulo = i;
                    break;
                }
            }
            hde.setConectado(true);
            hde.setTamanho(24);
            hde.setUnidade((char) (comp.getPAR().length + nulo));
        }
        Frame3 frame = new Frame3();
        frame.comp = comp;
        frame.isUSB=  isUSB;
        frame.id = nulo;
        frame.show();
    }//GEN-LAST:event_BTConectarActionPerformed

    private void BtCriarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtCriarActionPerformed
        if (RBParalela.isSelected()) {
            CBDispositivos.add("CD", null);
        } else if (RBUSB.isSelected()) {
            CBDispositivos.add("PenDrive", null);
        } else if (RBParalela1.isSelected()) {
            CBDispositivos.add("DVD", null);
        } else if (RBUSB1.isSelected()) {
            CBDispositivos.add("HD Externo", null);
        }
    }//GEN-LAST:event_BtCriarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTConectar;
    private javax.swing.JButton BtCriar;
    private javax.swing.JComboBox<String> CBDispositivos;
    private javax.swing.JRadioButton RBParalela;
    private javax.swing.JRadioButton RBParalela1;
    private javax.swing.JRadioButton RBUSB;
    private javax.swing.JRadioButton RBUSB1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
